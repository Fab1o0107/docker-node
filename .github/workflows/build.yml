name: Build & Push OCI Image to Registry

on:
  workflow_call:
    inputs:
      workdirs:
        required: true
        type: string
    secrets:
      docker-token:
        required: true
      github-username:
        required: true
      github-token:
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    continue-on-error: true
    strategy:
      matrix:
        workdir: ${{ fromJSON(inputs.workdirs) }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set up QEMU for Docker Buildx
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # tag=v2.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0

      - name: Set up Node.js for extracting recipe from Dockerfile
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: 18
          check-latest: true

      - name: Install meow dependencies for extracting recipe from Dockerfile
        run: npm i --no-save meow@11.x

      - name: Extract recipe from Dockerfile
        id: recipe
        run: |
          TAGS=`node ${{ github.workspace }}/extractImage.mjs ${{ matrix.workdir }}/Dockerfile tags`
          PLATFORMS=`node ${{ github.workspace }}/extractImage.mjs ${{ matrix.workdir }}/Dockerfile platforms`
          VARIANT=`node ${{ github.workspace }}/extractImage.mjs ${{ matrix.workdir }}/Dockerfile variant`
          echo TAGS: $TAGS
          echo PLATFORMS: $PLATFORMS
          echo VARIANT: $VARIANT
          echo "::set-output name=tags::${TAGS//$', '/'%0A'}"
          echo "::set-output name=platforms::${PLATFORMS//$', '/'%0A'}"
          echo "::set-output name=variant::$VARIANT"

      - name: Generate Docker image metadata
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4.3.0
        id: meta
        with:
          images: |
            docker.io/fabio0107/node
            ghcr.io/fab1o0107/node
          tags: |
            ${{ steps.recipe.outputs.tags }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          username: fabio0107
          password: ${{ secrets.docker-token }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ secrets.github-username }}
          password: ${{ secrets.github-token }}

      - name: Build and push the Docker image from the specified Dockerfile
        id: docker_build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          context: ${{ matrix.workdir }}
          platforms: |
            ${{ steps.recipe.outputs.platforms }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
