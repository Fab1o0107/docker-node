name: Build & Push OCI Image to Registry

on:
  workflow_call:
    inputs:
      workdirs:
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  build:
    continue-on-error: true
    strategy:
      matrix:
        workdir: ${{ fromJSON(inputs.workdirs) }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up QEMU for Docker Buildx
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Set up Node.js for extracting recipe from Dockerfile
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: 18
          check-latest: true

      - name: Install meow dependencies for extracting recipe from Dockerfile
        run: npm i --no-save meow@11.x

      - name: Extract recipe from Dockerfile
        id: recipe
        run: |
          TAGS=`node ${{ github.workspace }}/extractImage.mjs ${{ matrix.workdir }}/Dockerfile tags`
          PLATFORMS=`node ${{ github.workspace }}/extractImage.mjs ${{ matrix.workdir }}/Dockerfile platforms`
          VARIANT=`node ${{ github.workspace }}/extractImage.mjs ${{ matrix.workdir }}/Dockerfile variant`
          echo TAGS: $TAGS
          echo PLATFORMS: $PLATFORMS
          echo VARIANT: $VARIANT
          echo "::set-output name=tags::${TAGS//$', '/'%0A'}"
          echo "::set-output name=platforms::${PLATFORMS//$', '/'%0A'}"
          echo "::set-output name=variant::$VARIANT"

      - name: Generate Docker image metadata
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        id: meta
        with:
          images: |
            docker.io/fabio0107/node
            ghcr.io/fab1o0107/node
          tags: |
            ${{ steps.recipe.outputs.tags }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: fabio0107
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image from the specified Dockerfile
        id: docker_build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: ${{ matrix.workdir }}
          platforms: |
            ${{ steps.recipe.outputs.platforms }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
